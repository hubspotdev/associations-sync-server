# Associations Mappings Server

An Express.js application that provides seamless integration with HubSpot for managing associations between CRM objects. It handles creation, retrieval, deletion, and mapping of associations and definitions while enabling OAuth-based authentication with HubSpot.

## Table of Contents
- [What this project does](#what-this-project-does)
- [Why is this project useful](#why-is-this-project-useful)
- [Setup](#setup)
- [Scopes](#scopes)
- [Endpoints](#endpoints)
  - [Authentication](#authentication)
  - [Associations](#associations)
  - [Mappings](#mappings)
  - [Definitions](#definitions)
- [Available Scripts](#available-scripts)
- [Project Structure](#project-structure)
- [Dependencies](#dependencies)
  - [Core](#core)
  - [Development](#development)
- [License](#license)
- [Where to get help?](#where-to-get-help)
- [Who maintains and contributes to this project](#who-maintains-and-contributes-to-this-project)

## What this project does

This application provides a solution for integrating with HubSpot to manage associations between various CRM objects. It handles the creation, retrieval, deletion, and mapping of associations and definitions.

Key concepts:
- **Associations in HubSpot** refer to the connections or relationships between different CRM objects. For instance, a contact can be associated with a company, a deal, or a custom object
- **Association mapping** refers to the mapping of HubSpot objects to a local database
- **Association definition** involves specifying the nature and characteristics of the association between objects

## Why is this project useful

- **Comprehensive API Management**: Provides endpoints for managing associations and definitions between CRM objects, allowing for complex relationship handling
- **Data Consistency**: Ensures data consistency across platforms by handling interactions with both a local database and HubSpot

## Setup

1. Download and install PostgreSQL, make sure it's running, and create an empty database. You need the username and password (defaults username is postgres and no password)
2. Clone the repo
3. Create the .env file with these entries:
   - DATABASE_URL the (local) url to the postgres database (e.g. `postgresql://{username}:{password}@localhost:5432/{database name}`)
   - CLIENT_ID from Hubspot public app
   - CLIENT_SECRET from Hubspot public app
4. In your HubSpot app, add localhost:3001/api/install/oauth-callback as a redirect URL
5. The app uses the following scopes: crm.objects.companies.read crm.objects.companies.write crm.objects.contacts.read crm.objects.contacts.write crm.objects.deals.read crm.objects.deals.write oauth
6. Run `npm install` to install the required Node packages.
7. Run `npm run db-init` to initialize the database schema
8. Run `npm run seed` to seed the database with test data, select an industry for the data examples
9. Run `npm run dev` to start the server
10. Visit http://localhost:3001/api/install in a browser to get the OAuth install link
11. Once the server is running, you can access the application and API documentation at http://localhost:3001/api-docs.

## Scopes

- `crm.objects.companies.read` Read company objects from HubSpot.
- `crm.objects.companies.write` Create, update, or delete company objects in HubSpot.
- `crm.objects.contacts.read` Read contact objects from HubSpot.
- `crm.objects.contacts.write` Create, update, or delete contact objects in HubSpot.
- `crm.objects.deals.read` Read deal objects from HubSpot.
- `crm.objects.deals.write` Create, update, or delete deal objects in HubSpot.
- `oauth` Enables OAuth-based authentication and authorization with HubSpot.


## Endpoints

### Authentication Endpoints
- `
